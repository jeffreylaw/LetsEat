{"version":3,"sources":["images/non_existent_image2.jpg","images/dishes.svg","images/cute.svg","components/FoodList.js","components/Notification.js","components/Restaurant.js","components/RestaurantList.js","components/AddItems.js","components/Intro.js","components/Scroller.js","services/restaurants.js","App.js","index.js"],"names":["module","exports","FoodList","foodList","setFoodList","length","className","style","margin","map","food","key","Button","variant","onClick","filter","item","Notification","message","type","role","Restaurant","restaurant","coordinates","address","location","split","join","replace","formattedCoordinates","latitude","longitude","directionsQuery","name","Card","width","marginBottom","Img","src","thumb","require","Body","Title","href","url","target","rel","Subtitle","Text","timings","cuisines","repeat","price_range","user_rating","aggregate_rating","votes","display","RestaurantList","restaurants","Container","fluid","Row","id","AddItems","restaurantList","newSearch","foodInput","handleFoodInputChange","addFoodItem","handleChooseButton","spinning","loading","value","onChange","disabled","Intro","Col","Scroller","setChosenFood","setSpinning","scrollerRef","chosenFood","useRef","useState","randomChosenFood","setRandomChosenFood","expandedList","setExpandedList","useEffect","arr","concat","Array","fill","randomFood","Math","floor","random","document","documentElement","setProperty","lastIndexOf","ref","onAnimationEnd","setTimeout","i","get","startingIndex","a","axios","headers","response","data","App","showFoodList","setShowFoodList","setFoodInput","setStartingIndex","setCoordinates","errorMessage","setErrorMessage","responseMessage","setResponseMessage","additionalResponseMessage","setAdditionalResponseMessage","setRestaurantList","setLoading","showUpButton","setShowUpButton","addItemsRef","restaurantsRef","tutorialRef","navbarClass","setNavbarClass","window","addEventListener","listenScrollEvent","scrollY","restaurantService","then","restaurantsData","obj","apikey","prev","scrollTo","top","current","offsetTop","innerHeight","behavior","catch","error","showError","code","PERMISSION_DENIED","permission_err_msg","navigator","userAgent","includes","POSITION_UNAVAILABLE","TIMEOUT","handleSetLocation","geolocation","getCurrentPosition","position","coords","enableHighAccuracy","maximumAge","timeout","locationSet","observer","IntersectionObserver","isIntersecting","root","rootMargin","threshold","observe","Navbar","fixed","expand","Brand","alt","event","newFoodItem","toLowerCase","trim","color","onMouseDown","e","preventDefault","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4fa4866b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/non_existent_image2.7e62e439.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dishes.fb0434cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/cute.12bc02f1.svg\";","import React from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\nconst FoodList = ({ foodList, setFoodList }) => {\r\n    const ulStyles = {\r\n        margin: '10px'\r\n    }\r\n\r\n    if (foodList.length === 0) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ul className='list-group list-group-flush' style={ulStyles}>\r\n            {foodList.map(food => {\r\n                    return <li className='list-group-item list-item text-center' key={food}>{food} <Button className='ml-2 float-right' variant=\"danger\" onClick={() => setFoodList(foodList.filter(item => item !== food))}>{'\\u2715'}</Button></li>\r\n            })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodList\r\n\r\n","import React from 'react'\r\n\r\n\r\nconst Notification = ({ message, type }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    if (type === 'error') {\r\n        return (\r\n            <div className='alert alert-danger' role='alert'>\r\n                {message}\r\n            </div>\r\n        ) \r\n    }\r\n\r\n    return (\r\n        <div className='alert alert-success' role='alert'>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\n\r\n\r\nconst Restaurant = ({ restaurant, coordinates }) => {\r\n    let address = restaurant.location.address.split(' ').join('+').replace(/,/g, '')\r\n    let formattedCoordinates = `${coordinates.latitude},${coordinates.longitude}`\r\n    let directionsQuery = `https://www.google.com/maps/dir/?api=1&origin=${formattedCoordinates}&destination=${restaurant.name}+${address}`\r\n    // let searchOnlyQuery = `https://www.google.com/maps/search/?api=1&query=${restaurant.name}+${address}`\r\n\r\n    return (\r\n        <Card style={{ width: '18rem', margin: '0 auto', marginBottom: '10px' }}>\r\n            <Card.Img variant=\"top\" src={restaurant.thumb || require('../images/non_existent_image2.jpg')} />\r\n            <Card.Body>\r\n                <Card.Title className='centerText'><a href={restaurant.url} target='_blank' rel='noopener noreferrer'>{restaurant.name}</a></Card.Title>\r\n                <Card.Subtitle className='text-dark'>{restaurant.location.address}</Card.Subtitle>\r\n                <Card.Text>\r\n                    <b>Hours: </b>{restaurant.timings}<br/>\r\n                    <b>Cuisines: </b>{restaurant.cuisines} <br/>\r\n                    <b>Price range: </b>{'$'.repeat(restaurant.price_range)}  <b>Rating: </b>{restaurant.user_rating.aggregate_rating} ({restaurant.user_rating.votes})\r\n                </Card.Text>\r\n                <a href={directionsQuery} className=\"btn btn-outline-dark mt-1\" style={{display: 'block' }} target='_blank' rel='noopener noreferrer'>Get Directions</a>\r\n\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Restaurant","import React from 'react'\r\nimport Restaurant from './Restaurant'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\n\r\nconst RestaurantList = ({ restaurants, coordinates }) => {\r\n    // console.log(restaurants)\r\n    return (\r\n        <Container fluid>\r\n            <Row className=\"justify-content-md-center\">\r\n                {restaurants.map(restaurant => \r\n                    <Restaurant key={restaurant.id} restaurant={restaurant} coordinates={coordinates} />\r\n                )}\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default RestaurantList","import React from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\nconst AddItems = ({ restaurantList, newSearch, foodInput, handleFoodInputChange, addFoodItem, handleChooseButton, spinning, loading}) => {\r\n\r\n    if (restaurantList.length > 0) {\r\n        return <Button onClick={newSearch}>Start new search</Button> \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <input type=\"text\" value={foodInput} onChange={handleFoodInputChange}/>\r\n            <Button onClick={addFoodItem} className='ml-1'>Add</Button><Button onClick={handleChooseButton} disabled={spinning || loading} className='ml-1'>Decide for me</Button><br />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddItems","import React from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\nconst Intro = () => {\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row className='d-flex flex-column'>\r\n                <Col className='d-flex flex-sm-row flex-column align-items-center justify-content-center'>\r\n                    {/* <img src={require('../images/dishes.svg')} style={{ width: '16rem', marginRight: '0' }} alt='dishes with smiley face' /> */}\r\n                    <p className='lead intro-p'><b>LETSEAT</b> is a cuisine decider app for the undecisive.<br /><br />Create a list of dishes or cuisines of what you or your friends might want to eat and we will do the decision-making for you.\r\n                    </p>\r\n                </Col>\r\n                <Col className=\"d-flex justify-content-center\">\r\n                <a href=\"#main\"><p><Button variant=\"light\"><b>Get Started</b></Button></p></a>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Intro","import React, { useEffect, useRef, useState } from 'react'\r\n\r\nconst Scroller = ({foodList, setChosenFood, setSpinning, setFoodList, spinning, chosenFood}) => {\r\n    const scrollerRef = useRef(null)\r\n    const [randomChosenFood, setRandomChosenFood] = useState('')\r\n    const [expandedList, setExpandedList] = useState([])\r\n    useEffect(() => {\r\n        if (spinning) {\r\n            let arr = foodList.concat(foodList)\r\n            if (foodList.length < 10) {\r\n                arr = [].concat(...Array(5).fill(arr));\r\n            }\r\n            let randomFood = foodList[Math.floor(Math.random() * foodList.length)]\r\n            setExpandedList(arr)\r\n            setRandomChosenFood(randomFood)\r\n        }\r\n    }, [foodList, spinning])\r\n\r\n    useEffect(() => {\r\n        document.documentElement.style.setProperty('--item-count', expandedList.length)\r\n        document.documentElement.style.setProperty('--chosen-i', expandedList.lastIndexOf(randomChosenFood))\r\n    }, [expandedList, randomChosenFood])\r\n    \r\n    return (\r\n        <div className='scroller'>\r\n            <div className='box'>\r\n                <ul className='scrollerList' ref={scrollerRef} onAnimationEnd={() => {\r\n                    setTimeout(() => {\r\n                        setChosenFood(randomChosenFood)\r\n                        setFoodList([])\r\n                        setSpinning(false)\r\n                    }, 2000)\r\n                }}>\r\n                    {expandedList.map((food, i) => {\r\n                        return <li key={i} className='scrollerItem'>{food}</li>\r\n                    })}\r\n                </ul>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroller","import axios from 'axios'\r\nconst api = \"2da08fdb0e253646533d241423c90e16\";\r\n\r\nconst get = async (chosenFood, coordinates, startingIndex) => {\r\n    const response = await axios.get(`https://developers.zomato.com/api/v2.1/search?q=${chosenFood}&start=${startingIndex}&count=20&lat=${coordinates.latitude}&lon=${coordinates.longitude}&sort=real_distance&order=desc`,\r\n    {headers: {\"user-key\": api}})\r\n    return response.data.restaurants\r\n}\r\n\r\nexport default { get }\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport FoodList from './components/FoodList'\r\nimport Notification from './components/Notification'\r\nimport RestaurantList from './components/RestaurantList'\r\nimport AddItems from './components/AddItems'\r\nimport Intro from './components/Intro'\r\nimport Scroller from './components/Scroller'\r\nimport restaurantService from './services/restaurants'\r\nimport Loader from 'react-loader-spinner'\r\nimport { Navbar, Button, Row, Container } from 'react-bootstrap'\r\n\r\nconst App = () => {\r\n  const [foodList, setFoodList] = useState([])\r\n  // const [foodList, setFoodList] = useState([\"apple\", \"pineapple\", \"pizza\", \"hot dog\"])\r\n  const [showFoodList, setShowFoodList] = useState(true)\r\n  const [foodInput, setFoodInput] = useState('')\r\n  const [chosenFood, setChosenFood] = useState('')\r\n  const [startingIndex, setStartingIndex] = useState(0)\r\n  const [coordinates, setCoordinates] = useState({ longitude: null, latitude: null })\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [responseMessage, setResponseMessage] = useState(null)\r\n  const [additionalResponseMessage, setAdditionalResponseMessage] = useState(null)\r\n  const [restaurantList, setRestaurantList] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [showUpButton, setShowUpButton] = useState(false)\r\n  const addItemsRef = useRef(null)\r\n  const restaurantsRef = useRef()\r\n  const tutorialRef = useRef()\r\n  const [spinning, setSpinning] = useState(false)\r\n  const [navbarClass, setNavbarClass] = useState(\"navbar-transparent\");\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", listenScrollEvent);\r\n  })\r\n\r\n  const listenScrollEvent = () => {\r\n    window.scrollY > 100\r\n      ? setNavbarClass(\"navbar-white\")\r\n      : setNavbarClass(\"navbar-transparent\")\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if (chosenFood && coordinates.latitude && coordinates.longitude) {\r\n      const getRestaurants = () => {\r\n        setLoading(true)\r\n        restaurantService\r\n          .get(chosenFood, coordinates, startingIndex)\r\n          .then(restaurantsData => {\r\n            restaurantsData = restaurantsData.map(obj => {\r\n              delete obj.restaurant.apikey\r\n              return obj.restaurant\r\n            })\r\n            if (startingIndex > 0 && restaurantsData.length === 0) {\r\n              setAdditionalResponseMessage(`No more restaurants found`)\r\n              setTimeout(() => {\r\n                setAdditionalResponseMessage(null)\r\n              }, 2000)\r\n            } else if (restaurantsData.length === 0) {\r\n              setResponseMessage(`No restaurants found with the keyword: ${chosenFood}`)\r\n              setTimeout(() => {\r\n                setResponseMessage(null)\r\n              }, 2000)\r\n              setLoading(false)\r\n              newSearch()\r\n              return\r\n            }\r\n            if (restaurantsData.length > 0) {\r\n              setRestaurantList(prev => {\r\n                return prev.concat(restaurantsData)\r\n              })\r\n            }\r\n            setLoading(false)\r\n          })\r\n          .then(() => {\r\n            if (startingIndex === 0) {\r\n              setTimeout(function () {\r\n                window.scrollTo({ top: addItemsRef.current.offsetTop - (5 * window.innerHeight/100) - 10, behavior: 'smooth' })\r\n              }, 100)\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            setErrorMessage(`Error: ${error}`)\r\n            setTimeout(() => {\r\n              setLoading(false)\r\n              setErrorMessage(null)\r\n            }, 3000)\r\n          })\r\n      }\r\n      getRestaurants()\r\n    }\r\n\r\n  }, [chosenFood, coordinates, startingIndex, errorMessage])\r\n\r\n  const handleFoodInputChange = (event) => {\r\n    setFoodInput(event.target.value)\r\n  }\r\n\r\n  const addFoodItem = () => {\r\n    const newFoodItem = foodInput.toLowerCase().trim()\r\n    setShowFoodList(true)\r\n    setFoodInput('')\r\n    if (newFoodItem.length < 3) {\r\n      setResponseMessage('Item name must be longer than 2 characters')\r\n      setTimeout(() => {\r\n        setResponseMessage(null)\r\n      }, 1000)\r\n      return\r\n    }\r\n    if (newFoodItem.includes('&')) {\r\n      setResponseMessage('Item name cannot contain & character')\r\n      setTimeout(() => {\r\n        setResponseMessage(null)\r\n      }, 1000)\r\n      return\r\n    }\r\n    if (foodList.includes(newFoodItem)) {\r\n      setResponseMessage('Food item is already in the list')\r\n      setTimeout(() => {\r\n        setResponseMessage(null)\r\n      }, 2000)\r\n    }\r\n    if (!foodList.includes(newFoodItem) && newFoodItem.length > 0) {\r\n      setFoodList(foodList.concat(newFoodItem))\r\n    }\r\n  }\r\n\r\n  const handleChooseButton = () => {\r\n    if (foodList.length === 0) {\r\n      setResponseMessage(`No items added`)\r\n      setTimeout(() => {\r\n        setResponseMessage(null)\r\n      }, 2000)\r\n      return\r\n    }\r\n    if (!locationSet()) {\r\n      handleSetLocation()\r\n      return\r\n    }\r\n    setShowFoodList(false)\r\n    setSpinning(true)\r\n  }\r\n\r\n  const newSearch = () => {\r\n    setRestaurantList([])\r\n    setStartingIndex(0)\r\n    setFoodList([])\r\n    setChosenFood('')\r\n    setShowFoodList(true)\r\n  }\r\n\r\n  const showError = (error) => {\r\n    switch (error.code) {\r\n      case error.PERMISSION_DENIED:\r\n        let permission_err_msg = 'Please allow location permission access before trying again.'\r\n        if (navigator.userAgent.includes('Mac')) {\r\n          permission_err_msg = 'Please allow location permission access in browser and in MacOS security preferences before trying again.'\r\n        }\r\n        setErrorMessage(permission_err_msg)\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        break;\r\n      case error.POSITION_UNAVAILABLE:\r\n        setErrorMessage('Location information is unavailable.')\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        break;\r\n      case error.TIMEOUT:\r\n        setErrorMessage('The request to get user location timed out.')\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        break;\r\n      default:\r\n        setErrorMessage('An unknown error occurred.')\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleSetLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(position => {\r\n        setCoordinates({ longitude: position.coords.longitude, latitude: position.coords.latitude })\r\n        setShowFoodList(false)\r\n        setSpinning(true)\r\n      }, showError, { enableHighAccuracy: true, maximumAge: 0, timeout: 5000 })\r\n    } else {\r\n      setErrorMessage('Geolocation is not supported by this browser')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const locationSet = () => {\r\n    if (coordinates.latitude !== null && coordinates.latitude !== null) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting) {\r\n          setShowUpButton(false)\r\n        } else {\r\n          setShowUpButton(true)\r\n        }\r\n      },\r\n      {\r\n        root: null,\r\n        rootMargin: \"0px\",\r\n        threshold: 0\r\n      }\r\n    );\r\n    if (tutorialRef.current) {\r\n      observer.observe(tutorialRef.current);\r\n    }\r\n  }, [tutorialRef]);\r\n\r\n  const clearState = () => {\r\n    setFoodList([])\r\n    setShowFoodList(true)\r\n    setFoodInput('')\r\n    setChosenFood('')\r\n    setStartingIndex(0)\r\n    setCoordinates({ longitude: null, latitude: null })\r\n    setRestaurantList([])\r\n    setShowUpButton(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Container fluid className=\"main-div\">\r\n        <Navbar fixed=\"top\" expand=\"lg\" className={navbarClass}>\r\n          <Navbar.Brand href=\"#\" onClick={() => clearState()}>LetsEat</Navbar.Brand>\r\n          <Navbar.Text>\r\n                Created by: <a href=\"https://github.com/jeffreylaw\" target=\"_blank\" rel=\"noopener noreferrer\" >Jeffrey Law</a>\r\n              </Navbar.Text>\r\n        </Navbar>\r\n        <Row className=\"\">\r\n          <Notification message={errorMessage} type='error' />\r\n        </Row>\r\n        <Row ref={tutorialRef} className=\"intro-div align-items-center\">\r\n          <Intro />\r\n        </Row>\r\n      </Container>\r\n\r\n      <Container id=\"main\">\r\n        <Row className=\"tutorial-div\">\r\n        <img src={require('./images/dishes.svg')} style={{ width: '16rem' }} alt='dishes with smiley face' />\r\n\r\n          <ol>\r\n            <h1>How to use</h1>\r\n            <li>Enter dishes or cuisines that you might like to eat.</li>\r\n            <li>Let us randomly choose an item from the list.</li>\r\n            <li>Browse through the relevant restaurants around your location.*</li>\r\n            <p><small>*Access to your location required. Accuracy may vary on PC devices.</small></p>\r\n          </ol>\r\n        </Row>\r\n      </Container>\r\n\r\n      <Container>\r\n        <Row className=\"justify-content-center test\" ref={addItemsRef}>\r\n          <AddItems restaurantList={restaurantList} newSearch={newSearch} foodInput={foodInput} handleFoodInputChange={handleFoodInputChange} addFoodItem={addFoodItem} handleChooseButton={handleChooseButton} spinning={spinning} loading={loading} />\r\n        </Row>\r\n        <Row className=\"justify-content-center mt-2\">\r\n          <Notification message={responseMessage} type='error' />\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          {chosenFood && restaurantList.length > 0 && <h1>It's {chosenFood} time! <img className='birdIcon' src={require('./images/cute.svg')} alt='bird icon' /></h1>}\r\n          <FoodList foodList={showFoodList ? foodList : []} setFoodList={setFoodList} />\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          {spinning && foodList.length > 0 && <Scroller foodList={foodList} setChosenFood={setChosenFood} setSpinning={setSpinning} setFoodList={setFoodList} spinning={spinning} chosenFood={chosenFood} />}\r\n        </Row>\r\n      </Container>\r\n\r\n      <Container fluid>\r\n        <RestaurantList restaurants={restaurantList} coordinates={coordinates} />\r\n\r\n        <Row className=\"justify-content-center mt-3 mb-1\" ref={restaurantsRef}>\r\n          {loading && <Loader type='ThreeDots' color='#00BFFF' />}\r\n          {!loading && chosenFood && restaurantList.length > 0 && restaurantList.length !== 100 && <Button onClick={() => setStartingIndex(startingIndex + 20)}>Show more restaurants</Button>}\r\n        </Row>\r\n        <Row className=\"justify-content-center bottom-div\">\r\n          <Notification message={additionalResponseMessage} type='error' />\r\n          <Button style={{ display: (restaurantList.length > 0 && showUpButton) ? 'inline-block' : 'none' }} id=\"pageUp\" onMouseDown={(e) => e.preventDefault()} onClick={() => window.scrollTo({ top: addItemsRef.current.offsetTop - (5 * window.innerHeight/100) - 10, behavior: 'smooth' })}>{'\\u27a4'}</Button>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}