{"version":3,"sources":["images/non_existent_image2.jpg","images/dishes.svg","images/cute.svg","components/FoodList.js","components/Notification.js","components/Restaurant.js","components/RestaurantList.js","components/AddItems.js","components/Tutorial.js","components/Slider.js","services/restaurants.js","App.js","index.js"],"names":["module","exports","FoodList","foodList","setFoodList","length","className","style","margin","map","food","key","Button","variant","onClick","filter","item","Notification","message","type","role","Restaurant","restaurant","coordinates","address","location","split","join","replace","formattedCoordinates","latitude","longitude","directionsQuery","name","Card","width","Img","src","thumb","require","Body","Title","href","url","target","rel","Subtitle","Text","timings","cuisines","repeat","price_range","user_rating","aggregate_rating","votes","display","RestaurantList","restaurants","Container","fluid","Row","id","AddItems","restaurantList","newSearch","foodInput","handleFoodInputChange","addFoodItem","handleChooseButton","spinning","loading","value","onChange","disabled","Tutorial","Col","marginRight","alt","Slider","setChosenFood","setSpinning","sliderRef","useRef","list","concat","Array","fill","console","log","randomChosenFood","Math","floor","random","useEffect","current","addEventListener","setTimeout","document","documentElement","setProperty","lastIndexOf","ref","i","get","chosenFood","startingIndex","a","axios","headers","response","data","App","useState","showFoodList","setShowFoodList","setFoodInput","setStartingIndex","setCoordinates","errorMessage","setErrorMessage","responseMessage","setResponseMessage","setRestaurantList","setLoading","showUpButton","setShowUpButton","addItemsRef","restaurantsRef","tutorialRef","restaurantService","then","restaurantsData","obj","apikey","prev","window","scrollTo","top","offsetTop","behavior","catch","error","showError","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","handleSetLocation","navigator","geolocation","getCurrentPosition","position","coords","enableHighAccuracy","maximumAge","timeout","locationSet","observer","IntersectionObserver","isIntersecting","root","rootMargin","threshold","observe","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","event","newFoodItem","toLowerCase","trim","includes","color","onMouseDown","e","preventDefault","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.694c5336.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/non_existent_image2.7e62e439.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dishes.fb0434cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/cute.12bc02f1.svg\";","import React from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\nconst FoodList = ({ foodList, setFoodList }) => {\r\n    const ulStyles = {\r\n        margin: '10px'\r\n    }\r\n\r\n    if (foodList.length === 0) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ul className='list-group list-group-flush' style={ulStyles}>\r\n            {foodList.map(food => {\r\n                    return <li className='list-group-item list-item text-center' key={food}>{food} <Button className='ml-2 float-right' variant=\"danger\" onClick={() => setFoodList(foodList.filter(item => item !== food))}>{'\\u2715'}</Button></li>\r\n            })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodList\r\n\r\n","import React from 'react'\r\n\r\n\r\nconst Notification = ({ message, type }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    if (type === 'error') {\r\n        return (\r\n            <div className='alert alert-danger' role='alert'>\r\n                {message}\r\n            </div>\r\n        ) \r\n    }\r\n\r\n    return (\r\n        <div className='alert alert-success' role='alert'>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\n\r\n\r\nconst Restaurant = ({ restaurant, coordinates }) => {\r\n    let address = restaurant.location.address.split(' ').join('+').replace(/,/g, '')\r\n    let formattedCoordinates = `${coordinates.latitude},${coordinates.longitude}`\r\n    let directionsQuery = `https://www.google.com/maps/dir/?api=1&origin=${formattedCoordinates}&destination=${restaurant.name}+${address}`\r\n    // let searchOnlyQuery = `https://www.google.com/maps/search/?api=1&query=${restaurant.name}+${address}`\r\n\r\n    return (\r\n        <Card style={{ width: '18rem', margin: '0 auto' }}>\r\n            <Card.Img variant=\"top\" src={restaurant.thumb || require('../images/non_existent_image2.jpg')} />\r\n            <Card.Body>\r\n                <Card.Title className='centerText'><a href={restaurant.url} target='_blank' rel='noopener noreferrer'>{restaurant.name}</a></Card.Title>\r\n                <Card.Subtitle className='text-dark'>{restaurant.location.address}</Card.Subtitle>\r\n                <Card.Text>\r\n                    <b>Hours: </b>{restaurant.timings}<br/>\r\n                    <b>Cuisines: </b>{restaurant.cuisines} <br/>\r\n                    <b>Price range: </b>{'$'.repeat(restaurant.price_range)}  <b>Rating: </b>{restaurant.user_rating.aggregate_rating} ({restaurant.user_rating.votes})\r\n                    <a href={directionsQuery} className=\"btn btn-outline-primary mt-1\" style={{display: 'block' }} target='_blank' rel='noopener noreferrer'>Get Directions</a>\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Restaurant","import React from 'react'\r\nimport Restaurant from './Restaurant'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\n\r\nconst RestaurantList = ({ restaurants, coordinates }) => {\r\n    // console.log(restaurants)\r\n    return (\r\n        <Container fluid>\r\n            <Row className=\"justify-content-md-center\">\r\n                {restaurants.map(restaurant => \r\n                    <Restaurant key={restaurant.id} restaurant={restaurant} coordinates={coordinates} />\r\n                )}\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default RestaurantList","import React from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\nconst AddItems = ({ restaurantList, newSearch, foodInput, handleFoodInputChange, addFoodItem, handleChooseButton, spinning, loading}) => {\r\n\r\n    if (restaurantList.length > 0) {\r\n        return <Button onClick={newSearch}>Start new search</Button> \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <input type=\"text\" value={foodInput} onChange={handleFoodInputChange}/>\r\n            <Button onClick={addFoodItem} className='ml-1'>Add</Button><Button onClick={handleChooseButton} disabled={spinning || loading} className='ml-1 btn-power-blue'>Decide for me</Button><br />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddItems","import React from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\n\r\nconst Tutorial = () => {\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row className='d-flex flex-column'>\r\n                <Col className='d-flex flex-sm-row flex-column align-items-center justify-content-center'>\r\n                    <img src={require('../images/dishes.svg')} style={{ width: '16rem', marginRight: '0' }} alt='dishes with smiley face' />\r\n                    <p className='lead intro-p'><b>LetsEat</b> is a cuisine decider app for the undecisive.<br/><br/>Create a list of dishes or cuisines of what you or your friends might want to eat and we will do the decision-making for you.\r\n                    </p>\r\n                </Col>\r\n                <Col className='d-flex align-items-center justify-content-center lead'>\r\n                    <ol>\r\n                        <h3 className='font-weight-light'>How to use</h3>\r\n                        <li>Enter dishes or cuisines that you might like to eat.</li>\r\n                        <li>Let us randomly choose an item from the list.</li>\r\n                        <li>Browse through the relevant restaurants around your location.*</li>\r\n                        <p><small className='text-muted'>*Access to your location required. Accuracy may vary on PC devices.</small></p>\r\n\r\n                    </ol>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Tutorial","import React, { useEffect, useRef } from 'react'\r\n\r\nconst Slider = ({foodList, setChosenFood, setSpinning, setFoodList}) => {\r\n    const sliderRef = useRef(null)\r\n    let list = [].concat(...Array(10).fill(foodList))\r\n    // let list = [].concat(foodList).concat(foodList).concat(foodList).concat(foodList).concat(foodList)\r\n    console.log(list)\r\n    const randomChosenFood = list[Math.floor(Math.random() * list.length)]\r\n    // list = [].concat(...Array(4).fill(list))\r\n    console.log('number of things', list.length, 'randomchosen', randomChosenFood)\r\n    \r\n    useEffect(() => {\r\n        const spunCallback = () => {\r\n            console.log('Callback')\r\n            setTimeout(() => {\r\n                setSpinning(false)\r\n                setChosenFood(randomChosenFood)\r\n                setFoodList([])\r\n            }, 1000)\r\n        }\r\n\r\n        sliderRef.current.addEventListener('animationend', spunCallback)\r\n    }, [setSpinning, setChosenFood, randomChosenFood, setFoodList])\r\n\r\n    document.documentElement.style\r\n    .setProperty('--item-count', list.length)\r\n\r\n    document.documentElement.style\r\n    .setProperty('--chosen-i', list.lastIndexOf(randomChosenFood))\r\n    \r\n    return (\r\n        <div className='slider'>\r\n            <div className='box'>\r\n                <ul className='sliderList' ref={sliderRef}>\r\n                    {list.map((food, i) => {\r\n                        return <li key={i} className='sliderItem'>{food}</li>\r\n                    })}\r\n                </ul>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n    // return (\r\n    //     <div className='slider'>\r\n    //         <div className='box'>\r\n    //             <ul className='sliderList'>\r\n    //                 <li className='sliderItem'>One</li>\r\n    //                 <li className='sliderItem'>Two</li>\r\n    //                 <li className='sliderItem'>Three</li>\r\n    //                 <li className='sliderItem'>Four</li>\r\n    //                 <li className='sliderItem'>Five</li>\r\n    //             </ul>  \r\n    //         </div>\r\n    //     </div>\r\n    // )\r\n}\r\n\r\nexport default Slider","import axios from 'axios'\r\n// const api = \"2da08fdb0e253646533d241423c90e16\";\r\nconst api = 'd710754ce67200fb6fb9b5e26139f50e'\r\n\r\nconst get = async (chosenFood, coordinates, startingIndex) => {\r\n    const response = await axios.get(`https://developers.zomato.com/api/v2.1/search?q=${chosenFood}&start=${startingIndex}&lat=${coordinates.latitude}&lon=${coordinates.longitude}&sort=real_distance&order=desc`,\r\n    {headers: {\"user-key\": api}})\r\n    return response.data.restaurants\r\n}\r\n\r\nexport default { get }\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport FoodList from './components/FoodList'\r\nimport Notification from './components/Notification'\r\nimport RestaurantList from './components/RestaurantList'\r\nimport AddItems from './components/AddItems'\r\nimport Tutorial from './components/Tutorial'\r\nimport Slider from './components/Slider'\r\nimport restaurantService from './services/restaurants'\r\nimport Loader from 'react-loader-spinner'\r\nimport { Navbar, Button, Row, Container } from 'react-bootstrap'\r\n\r\nconst App = () => {\r\n  const [foodList, setFoodList] = useState([])\r\n  const [showFoodList, setShowFoodList] = useState(true)\r\n  const [foodInput, setFoodInput] = useState('')\r\n  const [chosenFood, setChosenFood] = useState('')\r\n  const [startingIndex, setStartingIndex] = useState(0)\r\n  const [coordinates, setCoordinates] = useState({longitude: null, latitude: null})\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [responseMessage, setResponseMessage] = useState(null)\r\n  const [restaurantList, setRestaurantList] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [showUpButton, setShowUpButton] = useState(false)\r\n  const addItemsRef = useRef()\r\n  const restaurantsRef = useRef()\r\n  const tutorialRef = useRef()\r\n  const [spinning, setSpinning] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (chosenFood && coordinates.latitude && coordinates.longitude) {\r\n      const getRestaurants = () => {\r\n        setLoading(true)\r\n        restaurantService\r\n        .get(chosenFood, coordinates, startingIndex)\r\n        .then(restaurantsData => {\r\n          restaurantsData = restaurantsData.map(obj => {\r\n            delete obj.restaurant.apikey\r\n            return obj.restaurant\r\n          })\r\n          if (startingIndex > 0 && restaurantsData.length === 0) {\r\n              setResponseMessage(`No more restaurants found with the keyword: ${chosenFood}`)\r\n              setTimeout(() => {\r\n                setResponseMessage(null)\r\n              }, 2000)\r\n          } else if (restaurantsData.length === 0) {\r\n            setResponseMessage(`No restaurants found with the keyword: ${chosenFood}`)\r\n            setTimeout(() => {\r\n              setResponseMessage(null)\r\n            }, 2000)\r\n          }\r\n          setRestaurantList(prev => {\r\n            return prev.concat(restaurantsData)\r\n          })\r\n          if (startingIndex === 0) {\r\n            window.scrollTo({ top: addItemsRef.current.offsetTop - 10, behavior: 'smooth'})\r\n          }\r\n          setLoading(false)\r\n        })\r\n        .catch((error) => {\r\n          setErrorMessage(`Error: ${errorMessage}`)\r\n          setTimeout(() => {\r\n            setLoading(false)\r\n            setErrorMessage(null)\r\n          }, 3000)        \r\n        })\r\n      }\r\n      getRestaurants()\r\n    }\r\n  \r\n  }, [chosenFood, coordinates, startingIndex, errorMessage])\r\n\r\n  const handleFoodInputChange = (event) => {\r\n    setFoodInput(event.target.value)\r\n  } \r\n\r\n  const addFoodItem = () => {\r\n    const newFoodItem = foodInput.toLowerCase().trim()\r\n    setShowFoodList(true)\r\n    setFoodInput('')\r\n    if (newFoodItem.length < 3) {\r\n      setResponseMessage('Item name must be longer than 2 characters')\r\n      setTimeout(() => {\r\n        setResponseMessage(null)\r\n      }, 1000)\r\n      return\r\n    }\r\n    if (newFoodItem.includes('&')) {\r\n      setResponseMessage('Item name cannot contain & character')\r\n      setTimeout(() => {\r\n        setResponseMessage(null)\r\n      }, 1000) \r\n      return\r\n    }\r\n    if (foodList.includes(newFoodItem)) {\r\n      setResponseMessage('Food item is already in the list')\r\n      setTimeout(() => {\r\n        setResponseMessage(null)\r\n      }, 1000)\r\n    }\r\n    if (!foodList.includes(newFoodItem) && newFoodItem.length > 0) {\r\n      setFoodList(foodList.concat(newFoodItem))\r\n    }\r\n  }\r\n\r\n  const handleChooseButton = () => {\r\n    if (foodList.length === 0) {\r\n      setResponseMessage(`No items added`)\r\n      setTimeout(() => {\r\n        setResponseMessage(null)\r\n      }, 2000)\r\n      return\r\n    }\r\n    if (!locationSet()) {\r\n      handleSetLocation()\r\n    }\r\n    setShowFoodList(false)\r\n    setSpinning(true)\r\n    // setFoodList([])\r\n    // setChosenFood(foodList[Math.floor(Math.random() * foodList.length)])\r\n  }\r\n\r\n  const newSearch = () => {\r\n    setRestaurantList([])\r\n    setStartingIndex(0)\r\n    setFoodList([])\r\n    setChosenFood('')\r\n    setShowFoodList(true)\r\n  }\r\n\r\n  const showError = (error) => {\r\n    switch(error.code) {\r\n      case error.PERMISSION_DENIED:\r\n        setErrorMessage('Location permission was declined, please enable before trying again.')\r\n        setTimeout(() => { \r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        break;\r\n      case error.POSITION_UNAVAILABLE:\r\n        setErrorMessage('Location information is unavailable.')\r\n        setTimeout(() => { \r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        break;\r\n      case error.TIMEOUT:\r\n        setErrorMessage('The request to get user location timed out.')\r\n        setTimeout(() => { \r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        break;\r\n      default:\r\n        setErrorMessage('An unknown error occurred.')\r\n        setTimeout(() => { \r\n          setErrorMessage(null)\r\n        }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleSetLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(position => {\r\n        // console.log('Setting location...', position)\r\n        setCoordinates({longitude: position.coords.longitude, latitude: position.coords.latitude})\r\n      }, showError, { enableHighAccuracy: true, maximumAge: 0, timeout: 5000 })\r\n    } else {\r\n      setErrorMessage('Geolocation is not supported by this browser')\r\n      setTimeout(() => { \r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const locationSet = () => {\r\n    if (coordinates.latitude !== null && coordinates.latitude !== null) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        // console.log(entry);\r\n        if (entry.isIntersecting) {\r\n          setShowUpButton(false)\r\n        } else {\r\n          setShowUpButton(true)\r\n        }\r\n      },\r\n      {\r\n        root: null,\r\n        rootMargin: \"0px\",\r\n        threshold: 0\r\n      }\r\n    );\r\n    if (tutorialRef.current) {\r\n      observer.observe(tutorialRef.current);\r\n    }\r\n  }, [tutorialRef]);\r\n\r\n  const clearState = () => {\r\n    setFoodList([])\r\n    setShowFoodList(true)\r\n    setFoodInput('')\r\n    setChosenFood('')\r\n    setStartingIndex(0)\r\n    setCoordinates({longitude: null, latitude: null})\r\n    setRestaurantList([])\r\n    setShowUpButton(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n          <Navbar.Brand href=\"#\" onClick={() => clearState()}>LetsEat</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n              <Navbar.Text>\r\n                Created by: <a href=\"#login\">Jeffrey Law</a>\r\n              </Navbar.Text>\r\n            </Navbar.Collapse>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      <Container fluid>\r\n        <Row className=\"justify-content-center\">\r\n            <Notification message={errorMessage} type='error' />\r\n        </Row>\r\n        <Row ref={tutorialRef}>\r\n          <Tutorial />\r\n        </Row>\r\n        <Row className=\"justify-content-center\" ref={addItemsRef}>\r\n          <AddItems restaurantList={restaurantList} newSearch={newSearch} foodInput={foodInput} handleFoodInputChange={handleFoodInputChange} addFoodItem={addFoodItem} handleChooseButton={handleChooseButton} spinning={spinning} loading={loading} />\r\n        </Row>\r\n        <Row className=\"justify-content-center mt-2\">\r\n          <Notification message={responseMessage} type='error' />\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          { chosenFood && restaurantList.length > 0 && <h1>It's {chosenFood} time! <img className='birdIcon' src={require('./images/cute.svg')} alt='bird icon' /></h1> }\r\n          <FoodList foodList={showFoodList ? foodList : []} setFoodList={setFoodList} />\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          { spinning && foodList.length > 0 && <Slider foodList={foodList} setChosenFood={setChosenFood} setSpinning={setSpinning} setFoodList={setFoodList} /> }\r\n        </Row>\r\n      </Container>\r\n\r\n      <Container fluid>\r\n          <RestaurantList restaurants={restaurantList} coordinates={coordinates} />\r\n          <Row className=\"justify-content-center restaurant-display\" ref={restaurantsRef}>\r\n            { loading && <Loader type='Circles' color='#00BFFF' /> }\r\n            { !loading && chosenFood && restaurantList.length > 0 && restaurantList.length !== 100 && <Button onClick={() => setStartingIndex(startingIndex + 20)}>Show more restaurants</Button> }\r\n          <Button style={{ display: (restaurantList.length > 0 && showUpButton) ? 'inline-block' : 'none' }} id=\"pageUp\" onMouseDown={(e) => e.preventDefault()} onClick={() => window.scrollTo({ top: addItemsRef.current.offsetTop - 10, behavior: 'smooth'})}>{'\\u27a4'}</Button>\r\n          </Row>\r\n        </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}